import React, { Component, PropTypes } from 'react';import {connect} from 'react-redux';import {getData} from '../AC/tableList';import TableList from '../components/TableList/TableList';import Pagination from '../components/Pagination/Pagination';class TableListContainer extends Component {  static propTypes = {    tableListData: PropTypes.array,    loading: PropTypes.bool,    isLoaded: PropTypes.bool,    page: PropTypes.string,    section: PropTypes.string,    filtersList: PropTypes.array  };    getPagesCount(){    const maxItemsCount = 5;    let box = [];    const pagesCount = Math.ceil(this.props.tableListData.length / maxItemsCount);    for (let i = 1; i < pagesCount + 1; i++) {      box.push(i);    }    return box;  }  render() {    const {loading, isLoaded} = this.props;    if (!isLoaded) return false;    const pagesCount = this.getPagesCount();    const maxPagesCount = +pagesCount.length;    return (      <div>        <TableList {...this.props}/>        <Pagination pagesCount = {pagesCount} page={+this.props.page} lastPage={+maxPagesCount} section={this.props.section}/>      </div>    )  }}export default connect((state) => ({  tableListData: state.tableListData.data.estimates,  loading: state.tableListData.loading,  isLoaded: state.tableListData.isLoaded}), {getData})(TableListContainer)